@model Linked_Data_Server.Models.Entities.SearchModelTemplate

@{
    ViewData["BodyClass"] = "Buscador";
    string urlSearch = $"{Context.Request.Path}?q={Context.Request.Query["q"]}";
    if(Context.Request.Query["concept"].ToString()!="")
    {
        urlSearch = $"{Context.Request.Path}?concept={Context.Request.Query["concept"]}";
    }
    else if (Context.Request.Query["etiqueta"].ToString() != "")
    {
        urlSearch = $"{Context.Request.Path}?etiqueta={Context.Request.Query["etiqueta"]}";
    }
}
<div>
    <h1>@ViewData["Title"]</h1>

    @foreach (var entity in Model.entidades)
    {
        <p>
            @entity.Value.rdfType<br>
            <a href="@entity.Key">@entity.Value.name</a>
        </p>

    }
    @{
        //Paginador
        int numTotal = Model.numResultados;
        int numResultadosPagina = Model.numResultadosPagina;
        int PaginaActual = Model.paginaActual;


        int NUM_PAG_INICIO = 3;
        int NUM_PAG_PROX_CENTRO = 2;
        int NUM_PAG_FIN = 3;

        int numPaginas = (int)Math.Ceiling((double)numTotal / (double)numResultadosPagina);


        if (numPaginas > 1)
        {
            <div id="navegadorRemover">
                <div id="NavegadorPaginasCorreo" class="paginadorResultados">
                    <div class="pag" id="NavegadorPaginasCorreo_Pag">
                        @if (PaginaActual != 1)
                        {
                            <a class="btn" href="@urlSearch&pagina=@(PaginaActual-1)">Anterior</a>
                        }
                        else
                        {
                            <a class="btn disabled" href="@urlSearch&pagina=@(PaginaActual-1)">Anterior</a>
                        }

                        @{
                            //INICIO
                            for (int i = 1; i <= NUM_PAG_INICIO; i++)
                            {
                                if (i > numPaginas) //Hemos excedio el número máximo de páginas, así que dejamos de pintar.
                                {
                                    break;
                                }

                                if (i == PaginaActual)
                                {
                                    <a class="btn disabled" href="@urlSearch&pagina=@i">@i</a>
                                }
                                else
                                {
                                    <a class="btn" href="@urlSearch&pagina=@i">@i</a>
                                }
                            }

                            if (numPaginas > NUM_PAG_INICIO) //Continuamos si ha más páginas que las que ya hemos pintado
                            {
                                int inicioRango = PaginaActual - NUM_PAG_PROX_CENTRO;
                                int finRango = PaginaActual + NUM_PAG_PROX_CENTRO;

                                if (PaginaActual < (NUM_PAG_INICIO + NUM_PAG_PROX_CENTRO + 1))
                                {
                                    inicioRango = NUM_PAG_INICIO + 1;
                                    if (PaginaActual <= NUM_PAG_INICIO) //En el rango de las primeras
                                    {
                                        finRango = PaginaActual + NUM_PAG_INICIO + NUM_PAG_PROX_CENTRO - 1;
                                    }
                                    else
                                    {
                                        finRango = NUM_PAG_INICIO + (2 * NUM_PAG_PROX_CENTRO) + 1; //Ultimo número de la serie.
                                    }
                                }
                                else if (PaginaActual > (numPaginas - NUM_PAG_FIN - NUM_PAG_PROX_CENTRO))
                                {
                                    finRango = numPaginas - NUM_PAG_FIN;
                                    if (PaginaActual > numPaginas - NUM_PAG_FIN) //En el rango de las últimas
                                    {
                                        inicioRango = PaginaActual - NUM_PAG_FIN - NUM_PAG_PROX_CENTRO + 1;//finRango - (pNumPaginas - PaginaActual + 1);
                                    }
                                    else
                                    {
                                        inicioRango = numPaginas - (NUM_PAG_FIN + (2 * NUM_PAG_PROX_CENTRO)); //Ultimo número de la serie empezando atrás.
                                    }

                                    //Avanzamos el inicio de la zona final para que no agrege páginas ya pintadas
                                    while (inicioRango <= NUM_PAG_INICIO)
                                    {
                                        inicioRango++;
                                    }
                                }

                                if (inicioRango > (NUM_PAG_INICIO + 1))
                                {
                                    <span class="separador">...</span>
                                }


                                for (int i = inicioRango; i <= finRango; i++)
                                {
                                    if (i > numPaginas) //Hemos excedio el número máximo de páginas, así que dejamos de pintar.
                                    {
                                        break;
                                    }

                                    if (i == PaginaActual)
                                    {
                                        <a class="btn disabled" href="@urlSearch&pagina=@i">@i</a>
                                    }
                                    else
                                    {
                                        <a class="btn" href="@urlSearch&pagina=@i">@i</a>
                                    }
                                }

                                if (finRango < numPaginas)
                                {
                                    //Continuamos si ha más páginas que las que ya hemos pintado
                                    inicioRango = numPaginas - NUM_PAG_FIN + 1;

                                    if ((inicioRango - 1) > finRango)
                                    {
                                        <span class="separador">...</span>
                                    }

                                    //Avanzamos el inicio de la zona final para que no agrege páginas ya pintadas
                                    while (inicioRango <= finRango)
                                    {
                                        inicioRango++;
                                    }

                                    finRango = numPaginas;

                                    for (int i = inicioRango; i <= finRango; i++)
                                    {
                                        if (i > numPaginas) //Hemos excedio el número máximo de páginas, así que dejamos de pintar.
                                        {
                                            break;
                                        }

                                        if (i == PaginaActual)
                                        {
                                            <a class="btn disabled" href="@urlSearch&pagina=@i">@i</a>
                                        }
                                        else
                                        {
                                            <a class="btn" href="@urlSearch&pagina=@i">@i</a>
                                        }
                                    }
                                }
                            }
                            if (PaginaActual != numPaginas)
                            {
                                <a class="btn" href="@urlSearch&pagina=@(PaginaActual+1)">Siguiente</a>
                            }
                            else
                            {
                                <a class="btn disabled" href="@urlSearch&pagina=@(PaginaActual+1)">Siguiente</a>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>