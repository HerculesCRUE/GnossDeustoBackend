@model Linked_Data_Server.Models.Entities.EntityModelTemplate

@{
    ViewData["BodyClass"] = "fichaRecurso";

}
<div class="row">
    <div class="col col-12 col-lg-12 col-contenido">
        <div class="wrapCol">
            <div class="header-resource">
                <div class="h1-container">
                    <h1>@ViewData["Title"]</h1>
                </div>
            </div>
            @if (Model.linkedDataRDF != null)
            {
                int i = 0;
                foreach (Linked_Data_Server.Models.Entities.LinkedDataRdfViewModel entity in Model.linkedDataRDF)
                {
                    if (i == 1)
                    {
                        PintarTablas(entity, Model.tables);
                        @if (Model.arborGraphs != null && Model.arborGraphs.Count > 0)
                        {
                            <div id="graphs" style="display:none">
                                @{
                                    PintarArborGraphs(Model.arborGraphs);
                                }
                            </div>
                        }
                        <h2>Entidades relacionadas</h2>
                    }
                    PintarItem(entity, i > 0, Model.propsTransform);
                    i++;
                }
                if (i == 1)
                {
                    PintarTablas(Model.linkedDataRDF.First(), Model.tables);
                    @if (Model.arborGraphs != null && Model.arborGraphs.Count > 0)
                    {
                        <div id="graphs" style="display:none">
                            @{
                                PintarArborGraphs(Model.arborGraphs);
                            }
                        </div>
                    }
                }
            }

        </div>
    </div>
</div>


@functions
{
    void PintarItem(Linked_Data_Server.Models.Entities.LinkedDataRdfViewModel pItem, bool pEntityLink, List<Linked_Data_Server.Models.Services.Config_Linked_Data_Server.PropertyTransform> pPropsTransform)
    {

        <div class="contenido">
            <div class="grupo grupo-descripcion">
                <div class="estado-tarea">

                    <table class="rdftable">
                        @if (!pItem.bnode)
                        {
                            <thead class="table-subject">
                                <tr>
                                    <th scope="col" colspan="2">
                                        @if (pEntityLink)
                                        {
                                            <span id="@pItem.uriEntity"><a href="@pItem.uriEntity">@pItem.uriEntity</a></span>
                                        }
                                        else
                                        {
                                            <span id="@pItem.uriEntity">@pItem.uriEntity</span>
                                        }
                                    </th>
                                </tr>
                            </thead>
                        }

                        <tbody>
                            @foreach (var stringProperty in pItem.stringPropertiesEntity)
                            {
                                foreach (var valor in stringProperty.Value)
                                {
                                    string propiedadAbreviada = stringProperty.Key;
                                    if (propiedadAbreviada.Contains("/"))
                                    {
                                        propiedadAbreviada = propiedadAbreviada.Substring(propiedadAbreviada.LastIndexOf("/") + 1);
                                    }
                                    <tr>
                                        @{
                                            String title = "";
                                        }

                                        @if (pItem.communNameProperties.ContainsKey(stringProperty.Key))
                                        {
                                            title = pItem.communNameProperties[stringProperty.Key];
                                        }else if(stringProperty.Key.StartsWith("http://www.w3.org/1999/02/22-rdf-syntax-ns#_"))
                                        {
                                            title = stringProperty.Key.Replace("http://www.w3.org/1999/02/22-rdf-syntax-ns#_","posición ");
                                        }

                                        <td class="" title="@title">
                                            @if (!string.IsNullOrEmpty(title))
                                            {
                                                <strong>@title</strong>
                                            }
                                            else
                                            {
                                                <strong>@propiedadAbreviada</strong>
                                            }
                                            <a href="@stringProperty.Key" target="_blank"><span class="linkext">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></a>
                                        </td>

                                        @if (pItem.urisRdf.Contains(valor))
                                        {
                                            string nombre = valor;
                                            string valorAux = valor;
                                            if (pItem.entitiesNames.ContainsKey(valor))
                                            {
                                                nombre = pItem.entitiesNames[valor];
                                            }

                                            foreach (var propTransform in pPropsTransform)
                                            {
                                                if (propTransform.property.Contains(stringProperty.Key))
                                                {
                                                    valorAux = propTransform.transform.Replace("{value}", valorAux);
                                                }
                                            }
                                            bool blank = true;
                                            if (valorAux.StartsWith(Model.domain))
                                            {
                                                blank = false;
                                            }
                                            <td>
                                                @if (blank)
                                                {
                                                    <a href="@valorAux" target="_blank">@nombre</a> <a href="@valorAux" target="_blank"><span class="linkext">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></a>
                                                }
                                                else
                                                {
                                                    <a href="@valorAux">
                                                        @nombre
                                                    </a>
                                                }
                                            </td>
                                        }
                                        else
                                        {
                                            if (stringProperty.Key == "http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
                                            {
                                                title = "";

                                                if (pItem.communNameProperties.ContainsKey(stringProperty.Key))
                                                {
                                                    title = pItem.communNameProperties[stringProperty.Key];
                                                }

                                                string valorPropiedadAbreviada = valor;
                                                if (valorPropiedadAbreviada.Contains("/"))
                                                {
                                                    valorPropiedadAbreviada = valorPropiedadAbreviada.Substring(valorPropiedadAbreviada.LastIndexOf("/") + 1);
                                                }


                                                string rdftypestring = "";
                                                if (pItem.communNameProperties.ContainsKey(valor))
                                                {
                                                    rdftypestring = pItem.communNameProperties[valor];
                                                }

                                                <td title="@title">
                                                    @if (!string.IsNullOrEmpty(rdftypestring))
                                                    {
                                                        <a href="@valor" target="_blank">@rdftypestring</a>
                                                    }
                                                    else
                                                    {
                                                        <a href="@valor" target="_blank">@valorPropiedadAbreviada</a>
                                                    }
                                                </td>
                                            }
                                            else
                                            {
                                                bool transform = false;
                                                foreach (var propTransform in pPropsTransform)
                                                {
                                                    if (propTransform.property.Contains(stringProperty.Key))
                                                    {
                                                        string uri = propTransform.transform.Replace("{value}", valor);
                                                        bool blank = true;
                                                        if (uri.StartsWith(Model.domain))
                                                        {
                                                            blank = false;
                                                        }

                                                        <td>
                                                            @if (blank)
                                                            {
                                                                <strong><a href="@uri" target="_blank">@valor</a> <a href="@uri" target="_blank"><span class="linkext">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></a></strong>
                                                            }
                                                            else
                                                            {
                                                                <strong><a href="@uri">@valor</a></strong>
                                                            }
                                                            @{
                                                                List<Linked_Data_Server.Models.Entities.LinkedDataRdfViewModel.ProvenanceData> provenanceData = pItem.provenanceData.Where(x => x.property == stringProperty.Key && x.value == valor).ToList();
                                                                if (provenanceData.Count() > 0)
                                                                {
                                                                    <a href="#" class="linkprovenancea"><span class="linkprovenance">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></a>
                                                                    @*<img src="/theme/resources/provenance.png" class="btProvenance" alt="Provenance" />*@
                                                                    @*<img src="~/theme/resources/provenance.png" alt="Provenance">*@
                                                                    <table class="provenancetable" style="display:none">
                                                                        <thead class="table-subject">
                                                                            <tr>
                                                                                <th scope="col" colspan="2">
                                                                                    <span>Provenance</span>
                                                                                </th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            @foreach (Linked_Data_Server.Models.Entities.LinkedDataRdfViewModel.ProvenanceData provenanceDataIn in provenanceData)
                                                                            {
                                                                                <tr>
                                                                                    <td>
                                                                                        <strong>@provenanceDataIn.date.ToString("G", System.Globalization.CultureInfo.CreateSpecificCulture("es-ES"))</strong>
                                                                                    </td>
                                                                                    <td><strong>@provenanceDataIn.organization</strong></td>
                                                                                </tr>
                                                                            }
                                                                        </tbody>
                                                                    </table>
                                                                }
                                                            }
                                                        </td>
                                                        transform = true;
                                                    }
                                                }
                                                if (!transform)
                                                {
                                                    <td>
                                                        <strong>@valor</strong>
                                                        @{
                                                            List<Linked_Data_Server.Models.Entities.LinkedDataRdfViewModel.ProvenanceData> provenanceData = pItem.provenanceData.Where(x => x.property == stringProperty.Key && x.value == valor).ToList();
                                                            if (provenanceData.Count() > 0)
                                                            {
                                                                <a href="#" class="linkprovenancea"><span class="linkprovenance">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></a>
                                                                @*<img src="/theme/resources/provenance.png" class="btProvenance" alt="Provenance" />*@
                                                                @*<img src="~/theme/resources/provenance.png" alt="Provenance">*@
                                                                <table class="provenancetable" style="display:none">
                                                                    <thead class="table-subject">
                                                                        <tr>
                                                                            <th scope="col" colspan="2">
                                                                                <span>Provenance</span>
                                                                            </th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>
                                                                        @foreach (Linked_Data_Server.Models.Entities.LinkedDataRdfViewModel.ProvenanceData provenanceDataIn in provenanceData)
                                                                        {
                                                                            <tr>
                                                                                <td>
                                                                                    <strong>@provenanceDataIn.date.ToString("G", System.Globalization.CultureInfo.CreateSpecificCulture("es-ES"))</strong>
                                                                                </td>
                                                                                <td><strong>@provenanceDataIn.organization</strong></td>
                                                                            </tr>
                                                                        }
                                                                    </tbody>
                                                                </table>
                                                            }
                                                        }
                                                    </td>
                                                }
                                            }


                                        }
                                    </tr>
                                }
                            }
                            @foreach (var entitiesProperty in pItem.entitiesPropertiesEntity)
                            {
                                foreach (var valor in entitiesProperty.Value)
                                {
                                    string propiedadAbreviada = entitiesProperty.Key;
                                    if (propiedadAbreviada.Contains("/"))
                                    {
                                        propiedadAbreviada = propiedadAbreviada.Substring(propiedadAbreviada.LastIndexOf("/") + 1);
                                    }
                                    String title = "";

                                    if (pItem.communNameProperties.ContainsKey(entitiesProperty.Key))
                                    {
                                        title = pItem.communNameProperties[entitiesProperty.Key];
                                    }
                                    <tr>
                                        <td class="" title="@title">
                                            @if (!string.IsNullOrEmpty(title))
                                            {
                                                <strong>@title</strong>
                                            }
                                            else
                                            {
                                                <strong>@propiedadAbreviada</strong>
                                            }
                                            <a href="@entitiesProperty.Key" target="_blank"><span class="linkext">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></a>
                                        </td>
                                        <td class="">
                                            @{
                                                PintarItem(valor, false, pPropsTransform);
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>



                </div>



            </div>
        </div>
    }

    void PintarTablas(Linked_Data_Server.Models.Entities.LinkedDataRdfViewModel pItem, List<Linked_Data_Server.Models.Entities.Table> pTables)
    {
        foreach (var table in pTables)
        {
            if (table.Rows.Count > 0)
            {
                HashSet<int> enlaces = new HashSet<int>();
                <h2>@table.Name</h2>
                <table class="display datatable">
                    <thead>
                        <tr>
                            @{
                                int iHeader = 0;
                                foreach (var header in table.Header)
                                {
                                    if (header.EndsWith("_href"))
                                    {
                                        enlaces.Add(iHeader);
                                    }
                                    else
                                    {
                                        <th scope="col">@header</th>
                                    }
                                    iHeader++;
                                }
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var row in table.Rows)
                        {
                            <tr>
                                @{
                                    int iField = 0;
                                    for(int i=0;i<row.fields.Count;i++)
                                    {
                                        string text = row.fields[i];
                                        string uri = row.fields[i];
                                        if(enlaces.Contains(i+1))
                                        {
                                            uri = row.fields[i+1];
                                            i++;
                                        }
                                        @if (Uri.IsWellFormedUriString(uri, UriKind.Absolute))
                                        {
                                            Uri uriAux = new Uri(uri);
                                            if (pItem.communNameProperties.ContainsKey(text))
                                            {
                                                text = pItem.communNameProperties[text];
                                            }
                                            else if (pItem.entitiesNames.ContainsKey(text))
                                            {
                                                text = pItem.entitiesNames[text];
                                            }
                                            if (Context.Request.Host.Value == uriAux.Host)
                                            {
                                                <td>
                                                    <a href="@uri">@text</a>
                                                </td>
                                            }
                                            else
                                            {
                                                <td>
                                                    <a href="@uri" target="_blank">@text</a>
                                                </td>
                                            }
                                        }
                                        else
                                        {                                            
                                            <td>@text</td>
                                        }
                                        iField++;
                                    }
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }
    }

    void PintarArborGraphs(List<Linked_Data_Server.Models.Entities.ArborGraph> pArborGraphs)
    {
        int i = 0;
        foreach (var arborGraph in pArborGraphs)
        {
            <h2>@arborGraph.Name</h2>
            <canvas id="arborgraph_@i" name="@arborGraph.Name" width="800" height="600">@arborGraph.Description</canvas>
            i++;
        }
    }
}

