<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hercules.Asio.XML_RDF_Conversor</name>
    </assembly>
    <members>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController">
            <summary>
            Controlador encargado para hacer una conversión de ficheros XML a RDF.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController._configuration">
            <summary>
            Propiedad encargada de almacenar la configuración.
            </summary>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController.ConfigurationFilesList">
            <summary>
            Permite visualizar una lista con los archivos de configuración JSON disponibles.
            </summary>
            <returns>Lista con los nombres de los ficheros JSON de configuración.</returns>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController.Convert(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            Permite convertir un archivo XML a RDF.
            Se requiere una configuración previa del archivo JSON.
            </summary>
            <param name="pXmlFile">Archivo XML que se desea convertir.</param>
            <param name="pType">Nombre del JSON que se desea cargar la configuración.</param>
            <returns>Fichero RDF.</returns>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController.CreateEntities(VDS.RDF.RohGraph,Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity[],System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Crea todas las entidades ontológicas del XML.
            </summary>
            <param name="pDataGraph">Grafo.</param>
            <param name="pLista">Lista de entidades.</param>
            <param name="pNodo">Nodo del que se va a hacer la búsqueda.</param>
            <param name="pNsmgr">Namespace del nodo.</param>
            <returns>Lista de entidades.</returns>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController.CreateINode(System.String,VDS.RDF.RohGraph)">
            <summary>
            Crea un UriNode o BlankNode a partir de una entidad.
            </summary>
            <param name="pEntidad">Entidad en cuestión.</param>
            <param name="pDataGraph">Grafo.</param>
            <returns>UriNode o BlankNode.</returns>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController.CreateINodeType(VDS.RDF.RohGraph,System.String,System.String)">
            <summary>
            Crea un LiteralNode según el tipo de dato del contenido.
            </summary>
            <param name="pDataGraph">Grafo.</param>
            <param name="pContenido">Contenido del nodo.</param>
            <param name="pDatatype">Tipo del dato del contenido.</param>
            <returns>Nodo construido según el tipo de dato.</returns>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController.CreateILiteralNodeType(VDS.RDF.RohGraph,System.String,System.String)">
            <summary>
            Crea un LiteralNode según el tipo de dato del contenido.
            </summary>
            <param name="pDataGraph">Grafo.</param>
            <param name="pContenido">Contenido del nodo.</param>
            <param name="pDatatype">Tipo del dato del contenido.</param>
            <returns>Nodo construido según el tipo de dato.</returns>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController.GetURI(Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity,System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Obtiene la URI a partir del ID.
            </summary>
            <param name="pEntidad">Entidad que se le quiera obtener el ID.</param>
            <param name="pNodo">Nodo dónde se almacena el ID.</param>
            <param name="pNsmgr">Namespace del nodo.</param>
            <returns>URI de la entidad.</returns>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController.GetTarget(Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity,System.Xml.XmlNode,System.Xml.XmlNamespaceManager)">
            <summary>
            Obtiene el target de la entidad.
            </summary>
            <param name="pEntidad">Entidad en la que se le quiere obtener el target.</param>
            <param name="pNodo">Nodo.</param>
            <param name="pNsmgr">Namespace del nodo.</param>
            <returns>Devuelve el tipo de rdf que es.</returns>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController.GetURL(System.String,System.String)">
            <summary>
            Obtiene la URI del grafo.
            </summary>
            <param name="pRdfType">Tipo del RDF.</param>
            <param name="pId">ID.</param>
            <returns>String con la URI del grafo construida.</returns>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Controllers.ConversorController.ConfigFilesList">
            <summary>
            Devuelve un listado con todos los ficheros de configuración JSON disponibles.
            </summary>
            <returns>Lista con el nombre de los ficheros disponibles.</returns>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Extra.Exceptions.BadRequestException">
            <summary>
            Excepción del tipo BadRequest
            </summary>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.ConversorConfig">
            <summary>
            Clase encargada de almacenar el listado de entidades.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.ConversorConfig.entities">
            <summary>
            Lista de entidades.
            </summary>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity">
            <summary>
            Clase encarga de almacenar la infomración de la entidad.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.mainEntity">
            <summary>
            Define si estamos en la entidad principal o no.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.rdftype">
            <summary>
            Tipo del rdf al que apunta.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.rdftypeproperty">
            <summary>
            Tipo del rdf del cual habrá que obtener del mapa.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.mappingrdftype">
            <summary>
            Mapa con los datos a cambiar.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.id">
            <summary>
            ID de la entidad.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.nameSpace">
            <summary>
            Espacio de nombre de la entidad.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.source">
            <summary>
            Namespace + Nombre de la etiqueta.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.property">
            <summary>
            Propiedad la cual hay que acceder y no se encuentra en el nodo.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.datatype">
            <summary>
            Tipo de dato de la propiedad que hay que acceder.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.properties">
            <summary>
            Listado de propiedades que puede tener la entidad.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.subentities">
            <summary>
            Listado de subentidades que puede tener la entidad.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Entity.comprobarSubentidad">
            <summary>
            Permite comprobar si es necesario acceder a las subentidades.
            </summary>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Property">
            <summary>
            Clase encargada de almacenar la infomación de las propiedades.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Property.property">
            <summary>
            IRI de la propiedad en cuestión.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Property.source">
            <summary>
            Namespace + Nombre de la etiqueta.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Property.datatype">
            <summary>
            Tipo de la propiedad.
            </summary>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Subentity">
            <summary>
            Clase encargada de almacenar las subentidades.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Subentity.property">
            <summary>
            Propiedad directa. IRI del tipo de la entidad a la que apunta.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Subentity.inverseProperty">
            <summary>
            Propiedad inversa. IRI del tipo de la entidad a la que apunta.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Subentity.entities">
            <summary>
            Lista de subentidades.
            </summary>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Mapping">
            <summary>
            Clase encargada de mapear.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Mapping.nameSpace">
            <summary>
            Espacio de nombre (xmlns) del nodo del XML.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Mapping.source">
            <summary>
            Contenido de la etiqueta en la cual se le ha de aplicar el target.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ConfigJson.Mapping.target">
            <summary>
            IRI del tipo de la entidad a la que apunta.
            </summary>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Models.ErrorViewModel">
            <summary>
            Error.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ErrorViewModel.RequestId">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Models.ErrorViewModel.ShowRequestId">
            <summary>
            Permite visualizar el id.
            </summary>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallApiService">
            <summary>
            Servicio para hacer llamadas a un api
            </summary>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallApiService.CallDeleteApi(System.String,System.String,Hercules.Asio.XML_RDF_Conversor.Models.Entities.TokenBearer)">
            <summary>
            Hace una petición delete
            </summary>
            <param name="urlBase">Url donde se encuentra el api</param>
            <param name="urlMethod">Url del método</param>
            <param name="token">token bearer de seguridad</param>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallApiService.CallGetApi(System.String,System.String,Hercules.Asio.XML_RDF_Conversor.Models.Entities.TokenBearer)">
            <summary>
            Hace una petición get
            </summary>
            <param name="urlBase">Url donde se encuentra el api</param>
            <param name="urlMethod">Url del método</param>
            <param name="token">token bearer de seguridad</param>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallApiService.CallPostApi(System.String,System.String,System.Object,Hercules.Asio.XML_RDF_Conversor.Models.Entities.TokenBearer,System.Boolean,System.String,System.Boolean)">
            <summary>
            Hace una petición post al api
            </summary>
            <param name="urlBase">Url donde se encuentra el api</param>
            <param name="urlMethod">Url del método</param>
            <param name="token">token bearer de seguridad</param>
            <param name="item">objeto a pasar</param>
            <param name="isFile">si el objeto pasado es un fichero</param>
            <param name="fileName">nombre del parametro del fichero, en el caso de que el objeto pasado sea un fichero</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallApiService.CallPostApiFiles(System.String,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.AspNetCore.Http.IFormFile},Hercules.Asio.XML_RDF_Conversor.Models.Entities.TokenBearer)" -->
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallApiService.CallPutApi(System.String,System.String,System.Object,Hercules.Asio.XML_RDF_Conversor.Models.Entities.TokenBearer,System.Boolean,System.String)">
            <summary>
            Hace una petición put
            </summary>
            <param name="urlBase">Url donde se encuentra el api</param>
            <param name="urlMethod">Url del método</param>
            <param name="token">token bearer de seguridad</param>
             <param name="item">objeto a pasar</param>
            <param name="isFile">si el objeto pasado es un fichero</param>
            <param name="fileName">nombre del parametro del fichero, en el caso de que el objeto pasado sea un fichero</param>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallTokenService">
            <summary>
            clase para la obtención de los tokens de acceso
            </summary>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallTokenService.CallTokenUrisFactory">
            <summary>
            Obtiene el token de acceso al api de OAIPMH
            </summary>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallTokenService.CallTokenIdentity(System.String)">
            <summary>
            Realiza la llamada para la obtención del token de acceso con el endpoint configurado en AuthorityGetToken
            </summary>
            <param name="stringData">Datos con el scope, el cliente id, el grantType y el secret</param>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallTokenService.TokenAppsettings(System.String,System.String)">
            <summary>
            Obtiene los parametros desde el appsettings.
            </summary>
            <param name="pTypeToken">Tipo del token.</param>
            <param name="pAccessToken">Token.</param>
            <returns></returns>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallUrisFactoryApiService">
            <summary>
            clase para realizar llamadas al api de uris factory
            </summary>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Models.Services.CallUrisFactoryApiService.GetUri(System.String,System.String,Hercules.Asio.XML_RDF_Conversor.Models.Entities.UriGetEnum)">
            <summary>
            Obtiene una rui
            </summary>
            <param name="resourceClass">Resource class o rdfType</param>
            <param name="identifier">Identificador</param>
            <param name="uriGetEnum">Configurador para indicar si el parametro pasado en resourceClass es un</param>
            <returns>uri</returns>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Models.Services.ConfigUrlService">
            <summary>
            Servicio para obtener las variables de configuración de urls
            </summary>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Models.Services.ConfigUrlService.GetUrlUrisFactory">
            <summary>
            Obtiene la url del api de uris factory que ha sido configurada
            </summary>
            <returns>uri del api uris factory</returns>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Program">
            <summary>
            Clase encargada de inicializar el servicio.
            </summary>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Program.Main(System.String[])">
            <summary>
            Main.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Program.CreateHostBuilder(System.String[])">
            <summary>
            Permite crear un host.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Hercules.Asio.XML_RDF_Conversor.Startup">
            <summary>
            Startup.
            </summary>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Guarda la configuración.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Hercules.Asio.XML_RDF_Conversor.Startup.Configuration">
            <summary>
            Propiedad para acceder a la configuración.
            </summary>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">Services.</param>
        </member>
        <member name="M:Hercules.Asio.XML_RDF_Conversor.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">ApplicationBuilder.</param>
            <param name="env">Environment.</param>
        </member>
        <member name="T:VDS.RDF.RohGraph">
            <summary>
            Grafo.
            </summary>
        </member>
        <member name="M:VDS.RDF.RohGraph.GetNextBlankNodeID">
            <summary>
            Crea un nuevo Blank Node ID sin usar y lo devuelve.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
